Добавляем задачи - task_client
(создаем модуль и работаем с настройками)


Добавляем Задачи - основную рабочую часть проекта task_back
в виде отдельного микросервиса-клиента
Соответственно в своих настройках он будет иметь
составные части как Рест приложения так и eureka-сервиса

Создаем модуль для задач:
File > New > Module
Выбираем Spring Initializr
Name - task_client
Language - Java
Type - Gradle-Groovy
Project SDK - SDK 17
Packaging - Jar

NEXT

Spring Boot 2.7.10
Оставляем галку на Download pre-build shared indexes for
JDK and Maven libraries

Выбираем зависимости dependencies:

Основные стартеры и зависимости из task_back
Developer Tools > Lombok
Web > Spring Web
SQL > Spring Data JPA, PostgreSQL Driver

Зависимости клиента микросервиса
Spring Cloud Discovery > Eureka Discovery Client

FINISH

---

Проверяем файлы настроек именно этого проекта
task_micro\task_client\build.gradle
id 'org.springframework.boot' version '2.7.10'

Также добавляем в build.gradle модели (сущности) из
модуля entity. В dependencies добавляем строку
implementation 'task_micro:entity'

task_micro\task_client\settings.gradle
rootProject.name = 'task_client'

task_micro\task_client\gradle\wrapper\gradle-wrapper.properties
distributionUrl=https\://services.gradle.org/distributions/gradle-8.0-bin.zip

Не забываем добавлять вновь созданные модули в корневой файл проекта
task_micro\settings.gradle
где у нас есть запись:
rootProject.name = 'task_micro'
Например добавляем туда task_client таким образом
includeBuild 'task_client'

---

Заполняем настройки в файлах .properties
task_micro\task_client\src\main\resources\application.properties
task_micro\task_client\src\main\resources\application-db.properties

В файл
task_micro\task_client\src\main\java\com\example\task_client\TaskClientApplication.java
добавляем аннотацию (т.к. это у нас клиент)
@EnableEurekaClient


