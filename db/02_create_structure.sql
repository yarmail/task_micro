/*
 Создаем таблицу Приоритетов
 Приоритет может быть, для примера: высокий, средний, низкий
 Выбирается соотвествующий цвет, например: красный, желтый, зеленый

 Как обычно, сначала создаются таблицы
 без зависимостей, потом таблицы с зависимостями
 на уже созданные

  Примечание: присутствуют вспомогательные запросы
 */
DROP TABLE IF EXISTS priority;
CREATE TABLE IF NOT EXISTS priority
(
    id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title varchar NOT NULL,
    color varchar NOT NULL
 );
 COMMENT ON TABLE priority
    IS 'Приоритет выполняемых задач';


/*
 Создаем таблицу Категории задач
 title может быть например: Семья, Работа, Отдых, Путешествия

 completed_count, uncompleted_count - каждая категория будет
 хранить в себе количество завершенных и незавершенных задач.
 Эти значения будут заполнятся автоматически с помощью триггеров
 из таблицы task
 */
DROP TABLE IF EXISTS category;
CREATE TABLE IF NOT EXISTS category
(
    id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title varchar NOT NULL,
    completed_count int DEFAULT 0,
    uncompleted_count int DEFAULT 0
);
COMMENT ON TABLE category
    IS 'Категории выполняемых задач';


/*
   Небольшой блок статистики
   Будет хранить общуюю статистику завершенных
   и незавершенных задач
   В этой таблице у нас будет только одна строка,
   и два обновляющихся поля за счет триггеров
 */
DROP TABLE IF EXISTS stat;
CREATE TABLE IF NOT EXISTS stat
(
    id int,
    completed_total int DEFAULT 0,
    uncompleted_total int DEFAULT 0
);
COMMENT ON TABLE stat
    IS 'Статистика';


/*
 Основная таблица Task, которая использует
 таблицы priority и category
 Title - название задания
 Completed - выполнено или не выполнено задание
 task_date - храним дату и время создания задания
 */
DROP TABLE IF EXISTS task;
CREATE TABLE IF NOT EXISTS task
(
    id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title varchar NOT NULL,
    completed int DEFAULT 0,
    task_date timestamp DEFAULT NULL,
    priority_id int REFERENCES priority(id)
        ON DELETE SET DEFAULT ON UPDATE RESTRICT DEFAULT NULL,
    category_id int REFERENCES category(id)
        ON DELETE SET DEFAULT ON UPDATE RESTRICT DEFAULT NULL
);
COMMENT ON TABLE task
    IS 'Список задач';